{"version":3,"file":"static/js/59.0df99412.chunk.js","mappings":"kTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,+FACzBC,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAHkB,kBAOND,EAAAA,EAAAA,IAAA,uBAAkCG,GAP5B,uBAOrBG,EAPqB,EAOrBA,KAPqB,kBAQtBA,EAAKC,SARiB,gCAU7BC,QAAQC,IAAI,2BAA4B,KAAMC,SAVjB,yDAAH,qDAcjBC,EAAS,mCAAG,WAAOC,EAAaC,GAApB,kFACjBV,EAAU,CACdC,OAAQ,CACNC,QAASJ,EACTa,MAAOF,EACPG,KAAMF,IALa,kBASEb,EAAAA,EAAAA,IAAA,iBAA4BG,GAT9B,uBASbG,EATa,EASbA,KATa,kBAUdA,EAAKC,SAVS,gCAYrBC,QAAQQ,MAAM,2BAA4B,KAAMN,SAZ3B,yDAAH,wDAgBTO,EAAY,mCAAG,WAAMC,GAAN,kFACpBf,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAHa,kBAODD,EAAAA,EAAAA,IAAA,iBAAoBkB,EAApB,KAA2Bf,GAP1B,uBAOhBG,EAPgB,EAOhBA,KAPgB,kBASjBA,GATiB,gCAWxBE,QAAQQ,MAAM,2BAA4B,KAAMN,SAXxB,yDAAH,sDAeZS,EAAQ,mCAAG,WAAMD,GAAN,kFAChBf,EAAU,CACdC,OAAQ,CACNC,QAASJ,EACTmB,SAAU,UAJQ,kBASGpB,EAAAA,EAAAA,IAAA,iBAAoBkB,EAApB,aAAmCf,GATtC,uBASZG,EATY,EASZA,KATY,kBAWbA,EAAKe,MAXQ,gCAapBb,QAAQQ,MAAM,2BAA4B,KAAMN,SAb5B,yDAAH,sDAiBRY,EAAU,mCAAG,WAAMJ,GAAN,kFAClBf,EAAU,CACdC,OAAQ,CACNC,QAASJ,EACTmB,SAAU,QACVL,KAAM,IALc,kBAUCf,EAAAA,EAAAA,IAAA,iBAAoBkB,EAApB,aAAmCf,GAVpC,uBAUdG,EAVc,EAUdA,KAVc,kBAYfA,EAAKC,SAZU,gCActBC,QAAQQ,MAAM,2BAA4B,KAAMN,SAd1B,yDAAH,qD,kGChEVa,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wVAKF,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAlB,IACE,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,MAAnB,IAEZ,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,KAAnB,IACK,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,KAAxB,IAGL,SAAAR,GAAC,OAAIA,EAAEC,MAAMG,OAAOK,KAAnB,IACU,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOM,MAAnB,IAGZ,SAAAV,GAAC,OAAIA,EAAEC,MAAMG,OAAOK,KAAnB,IACU,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOM,MAAnB,I,SCFzB,EAdkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACvB,OACE,UAACf,EAAD,CAAUc,GAAIA,EAAd,WACE,SAAC,MAAD,CAAqBE,KAAK,OACzBD,IAGN,C,qBCXD,IAAME,EAAc,CAClBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAEZ,K,2MCNaC,EAAUzB,EAAAA,GAAAA,IAAH,iHACS,SAAAE,GAAC,OAAIA,EAAEC,MAAMG,OAAOoB,KAAnB,IAMjBC,EAAS3B,EAAAA,GAAAA,IAAH,sOAIA,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAlB,IAUPuB,EAAO5B,EAAAA,GAAAA,IAAH,gIAQJ6B,EAAW7B,EAAAA,GAAAA,GAAH,6CAIR8B,EAAQ9B,EAAAA,GAAAA,GAAH,uOACH,SAAAE,GAAC,OAAIA,EAAEC,MAAM4B,UAAUC,CAAtB,IAWH,SAAA9B,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,MAAnB,IAGD0B,EAAMjC,EAAAA,GAAAA,IAAH,qEAKHC,GAAOD,EAAAA,EAAAA,IAAOkC,EAAAA,GAAPlC,CAAH,uRAEE,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAlB,IAET,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,KAAnB,IACK,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,KAAxB,IAGL,SAAAR,GAAC,OAAIA,EAAEC,MAAMG,OAAOK,KAAnB,IACU,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOM,MAAnB,IAGZ,SAAAV,GAAC,OAAIA,EAAEC,MAAMG,OAAOK,KAAnB,IACU,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,MAAnB,I,SC4CzB,EA9FqB,WAAO,IAAD,IACzB,GAA0B4B,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAO3C,EAAP,KAAc8C,EAAd,KACQ5C,GAAO6C,EAAAA,EAAAA,MAAP7C,GAGF8C,EAAY,qBAFDC,EAAAA,EAAAA,MAEaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc7C,OAZAC,EAAAA,EAAAA,YAAU,YACRnD,EAAAA,EAAAA,IAAaoD,OAAOnD,IACjBoD,MAAK,SAAAV,GACJC,EAASD,GACTE,EAAS,KACV,IACAS,OAAM,SAAAvD,GACL8C,EAAS9C,EAAMN,SACfmD,EAAS,KACV,GACJ,GAAE,CAAC3C,KAGF,6BACE,SAAC,IAAD,CAAWmB,GAAI2B,EAAf,qBACCJ,IACC,iCACE,UAACX,EAAD,YACE,SAACE,EAAD,CACEqB,IACEZ,EAAMa,YAAN,yCACsCb,EAAMa,aAD5C,gDAIFC,IAAKd,EAAMe,SAEb,UAACvB,EAAD,YACE,0BACGQ,EAAMe,MAAQf,EAAMe,MAAQ,iBAD/B,KAEG,IAAIC,KAAKhB,EAAMiB,cAAcC,cAFhC,QAIA,2BACE,SAACzB,EAAD,WACE,0BACE,iDACCO,EAAMmB,aAAaC,QAAQ,SAGhC,SAAC3B,EAAD,WACE,0BACE,qCAAiB,IAChBO,EAAMqB,SAAWrB,EAAMqB,UAAW,wCAGvC,UAAC5B,EAAD,YACE,mCACCO,EAAMsB,OAAOC,OAAS,GACrB,wBACGvB,EAAMsB,OAAOE,KAAI,gBAAGlE,EAAH,EAAGA,GAAImE,EAAP,EAAOA,KAAP,OAChB,SAAC/B,EAAD,WACE,0BAAO+B,KADGnE,EADI,OAOpB,+CAMV,4BACE,qDACA,UAACuC,EAAD,YACE,SAAChC,EAAD,CAAMY,GAAG,OAAO6B,MAAO,CAAEC,KAAMH,GAA/B,mBAGA,SAACvC,EAAD,CAAMY,GAAG,UAAU6B,MAAO,CAAEC,KAAMH,GAAlC,yBAIF,SAAC,EAAAsB,SAAD,CAAUC,UAAU,SAAC,KAAD,CAAcC,MAAM,MAAMC,MAAM,YAApD,UACE,SAAC,KAAD,YAKPzE,GACC0E,EAAAA,GAAAA,MACE,4DACAlD,EAAAA,KAIT,C","sources":["API/moviesAPI.js","components/goBackBtn/goBackBtn.styled.js","components/goBackBtn/goBackBtn.jsx","helpers/ToastParams.js","pages/movieDetails.styled.js","pages/movieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY_API = '74c5e15336c71e6f10e46fc816460a0f';\n\nexport const getTrendingMovies = async () => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n    },\n  };\n  try {\n    const { data } = await axios.get(`/trending/movie/day?`, options);\n    return data.results;\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovies = async (searchQuery, currentPage) => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n      query: searchQuery,\n      page: currentPage,\n    },\n  };\n  try {\n    const { data } = await axios.get(`/search/movie?`, options);\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovieById = async id => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n    },\n  };\n  try {\n    const { data } = await axios.get(`/movie/${id}?`, options);\n\n    return data;\n  } catch (error) {\n    console.error('Something wrong with API', error.message);\n  }\n};\n\nexport const getCasts = async id => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n      language: 'en-US',\n    },\n  };\n\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits?`, options);\n\n    return data.cast;\n  } catch (error) {\n    console.error('Something wrong with API', error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n      language: 'en-US',\n      page: 1,\n    },\n  };\n\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews?`, options);\n\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong with API', error.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.accent};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.large};\n\n  :hover {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.affect};\n  }\n  &.active {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.affect};\n\n`;\n","import PropTypes from 'prop-types';\nimport { AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { BackLink } from './goBackBtn.styled';\n\nconst GoBackBtn = ({ to, children }) => {\n  return (\n    <BackLink to={to}>\n      <AiOutlineDoubleLeft size=\"18\" />\n      {children}\n    </BackLink>\n  );\n};\n\nGoBackBtn.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default GoBackBtn;\n","const toastParams = {\n  position: 'top-center',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\nexport default toastParams;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  border-bottom: 1px solid ${p => p.theme.colors.muted};\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const Poster = styled.img`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  height: auto;\n  border-radius: ${p => p.theme.radii.normal};\n\n  @media (min-width: 768px) {\n    max-width: 250px;\n  }\n  @media (min-width: 1170px) {\n    max-width: 350px;\n  }\n`;\n\nexport const Info = styled.div`\n  margin: 14px auto 14px 20px;\n  width: 300px;\n  @media (min-width: 768px) {\n    width: 500px;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  margin-top: 14px;\n`;\n\nexport const Genre = styled.li`\n  font-size: ${p => p.theme.fontSizes.s};\n  &:first-child {\n    margin-top: 8px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  &::before {\n    content: 'â–¶';\n    margin-right: 10px;\n    color: ${p => p.theme.colors.accent};\n  }\n`;\nexport const Nav = styled.nav`\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 6px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.large};\n  margin-left: 10px;\n  :hover {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.affect};\n  }\n  &.active {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport toastParams from '../helpers/ToastParams';\nimport { getMovieById } from 'API/moviesAPI';\nimport GoBackBtn from 'components/goBackBtn/goBackBtn';\n\nimport {\n  Wrapper,\n  Poster,\n  Info,\n  InfoItem,\n  Genre,\n  Nav,\n  Link,\n} from './movieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(Number(id))\n      .then(movie => {\n        setMovie(movie);\n        setError(null);\n      })\n      .catch(error => {\n        setError(error.message);\n        setMovie(null);\n      });\n  }, [id]);\n\n  return (\n    <main>\n      <GoBackBtn to={backLinkHref}>Go back</GoBackBtn>\n      {movie && (\n        <>\n          <Wrapper>\n            <Poster\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : `https://sdlatlas.com/public/img/thumbnail.jpg`\n              }\n              alt={movie.title}\n            />\n            <Info>\n              <h2>\n                {movie.title ? movie.title : 'name not found'} (\n                {new Date(movie.release_date).getFullYear()})\n              </h2>\n              <ul>\n                <InfoItem>\n                  <p>\n                    <b>Audience Evaluation: </b>\n                    {movie.vote_average.toFixed(1)}\n                  </p>\n                </InfoItem>\n                <InfoItem>\n                  <p>\n                    <b>Overview:</b>{' '}\n                    {movie.overview ? movie.overview : <span>N/A</span>}\n                  </p>\n                </InfoItem>\n                <InfoItem>\n                  <b>Genres:</b>\n                  {movie.genres.length > 0 ? (\n                    <ul>\n                      {movie.genres.map(({ id, name }) => (\n                        <Genre key={id}>\n                          <span>{name}</span>\n                        </Genre>\n                      ))}\n                    </ul>\n                  ) : (\n                    <span>N/A</span>\n                  )}\n                </InfoItem>\n              </ul>\n            </Info>\n          </Wrapper>\n          <div>\n            <h2>Additional information:</h2>\n            <Nav>\n              <Link to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </Link>\n              <Link to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </Link>\n            </Nav>\n            <Suspense fallback={<InfinitySpin width=\"200\" color=\"#4fa94d\" />}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n      {error &&\n        toast.error(\n          'Sorry, something went wrong.ðŸ¦„ Please try again',\n          toastParams\n        )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY_API","getTrendingMovies","options","params","api_key","data","results","console","log","message","getMovies","searchQuery","currentPage","query","page","error","getMovieById","id","getCasts","language","cast","getReviews","BackLink","styled","Link","p","theme","radii","normal","colors","accent","black","fontWeights","large","white","affect","to","children","size","toastParams","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Wrapper","muted","Poster","Info","InfoItem","Genre","fontSizes","s","Nav","NavLink","useState","movie","setMovie","setError","useParams","backLinkHref","useLocation","state","from","useEffect","Number","then","catch","src","poster_path","alt","title","Date","release_date","getFullYear","vote_average","toFixed","overview","genres","length","map","name","Suspense","fallback","width","color","toast"],"sourceRoot":""}