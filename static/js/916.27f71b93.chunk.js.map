{"version":3,"file":"static/js/916.27f71b93.chunk.js","mappings":"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","sources":["components/goBackBtn/goBackBtn.styled.js","components/goBackBtn/goBackBtn.jsx","helpers/ToastParams.js","components/movieDescription/movieDescription.styled.js","components/movieDescription/movieDescription.jsx","pages/movieDetails.jsx","services/API/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.accent};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.large};\n\n  :hover {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.affect};\n  }\n  &.active {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.affect};\n\n`;\n","import PropTypes from 'prop-types';\nimport { AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { BackLink } from './goBackBtn.styled';\n\nconst GoBackBtn = ({ to, children }) => {\n  return (\n    <BackLink to={to}>\n      <AiOutlineDoubleLeft size=\"18\" />\n      {children}\n    </BackLink>\n  );\n};\n\nGoBackBtn.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default GoBackBtn;\n","const toastParams = {\n  position: 'top-center',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\nexport default toastParams;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  border-bottom: 1px solid ${p => p.theme.colors.muted};\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const Poster = styled.img`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  height: auto;\n  border-radius: ${p => p.theme.radii.normal};\n\n  @media (min-width: 768px) {\n    max-width: 250px;\n  }\n  @media (min-width: 1170px) {\n    max-width: 350px;\n  }\n`;\n\nexport const Info = styled.div`\n  margin: 14px auto 14px 20px;\n  width: 300px;\n  @media (min-width: 768px) {\n    width: 500px;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  margin-top: 14px;\n`;\n\nexport const Genre = styled.li`\n  font-size: ${p => p.theme.fontSizes.s};\n  &:first-child {\n    margin-top: 8px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  &::before {\n    content: 'â–¶';\n    margin-right: 10px;\n    color: ${p => p.theme.colors.accent};\n  }\n`;\nexport const Nav = styled.nav`\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 6px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.large};\n  margin-left: 10px;\n  :hover {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.affect};\n  }\n  &.active {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport {\n  Wrapper,\n  Poster,\n  Info,\n  InfoItem,\n  Genre,\n  Nav,\n  Link,\n} from './movieDescription.styled';\n\nconst MovieDescription = ({ movie, location }) => {\n  return (\n    <div>\n      <Wrapper>\n        <Poster\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : `https://sdlatlas.com/public/img/thumbnail.jpg`\n          }\n          alt={movie.title}\n        />\n        <Info>\n          <h2>\n            {movie.title ? movie.title : 'name not found'} (\n            {new Date(movie.release_date).getFullYear()})\n          </h2>\n          <ul>\n            <InfoItem>\n              <p>\n                <b>Audience Evaluation: </b>\n                {movie.vote_average.toFixed(1)}\n              </p>\n            </InfoItem>\n            <InfoItem>\n              <p>\n                <b>Overview:</b>{' '}\n                {movie.overview ? movie.overview : <span>N/A</span>}\n              </p>\n            </InfoItem>\n            <InfoItem>\n              <b>Genres:</b>\n              {movie.genres.length > 0 ? (\n                <ul>\n                  {movie.genres.map(({ id, name }) => (\n                    <Genre key={id}>\n                      <span>{name}</span>\n                    </Genre>\n                  ))}\n                </ul>\n              ) : (\n                <span>N/A</span>\n              )}\n            </InfoItem>\n          </ul>\n        </Info>\n      </Wrapper>\n      <div>\n        <h2>Additional information:</h2>\n        <Nav>\n          <Link to=\"cast\" state={{ from: location }}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={{ from: location }}>\n            Reviews\n          </Link>\n        </Nav>\n        <Suspense fallback={<InfinitySpin width=\"200\" color=\"#4fa94d\" />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\nexport default MovieDescription;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport toastParams from '../helpers/ToastParams';\nimport { getMovieById } from '../services/API/moviesAPI';\nimport GoBackBtn from 'components/goBackBtn/goBackBtn';\nimport MovieDescription from 'components/movieDescription/movieDescription';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    error && toast.error(error, toastParams);\n  }, [error]);\n\n  useEffect(() => {\n    getMovieById(Number(id))\n      .then(movie => {\n        setMovie(movie);\n        setError('');\n      })\n      .catch(error => {\n        setError(error.message);\n        setMovie(null);\n      });\n  }, [id]);\n\n  return (\n    <main>\n      <GoBackBtn to={backLinkHref}>Go back</GoBackBtn>\n      {movie && <MovieDescription movie={movie} location={location} />}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY_API = '74c5e15336c71e6f10e46fc816460a0f';\n\nexport const getTrendingMovies = async () => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n    },\n  };\n  try {\n    const { data } = await axios.get(`/trending/movie/day?`, options);\n    const validData = data.results.map(\n      ({ id, title, poster_path, vote_average }) => ({\n        id,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : `https://sdlatlas.com/public/img/thumbnail.jpg`,\n        title: title ? title : 'name not found',\n        vote_average: vote_average.toFixed(1),\n      })\n    );\n    return validData;\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovies = async (searchQuery, currentPage) => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n      query: searchQuery,\n      page: currentPage,\n    },\n  };\n  try {\n    const { data } = await axios.get(`/search/movie?`, options);\n    const validData = data.results.map(\n      ({ id, title, poster_path, vote_average }) => ({\n        id,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : `https://sdlatlas.com/public/img/thumbnail.jpg`,\n        title: title ? title : 'name not found',\n        vote_average: vote_average.toFixed(1),\n      })\n    );\n    return validData;\n  } catch (error) {\n    console.error('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovieById = async id => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n    },\n  };\n  try {\n    const { data } = await axios.get(`/movie/${id}?`, options);\n    return data;\n  } catch (error) {\n    console.error('Something wrong with API', error.message);\n  }\n};\n\nexport const getCasts = async id => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n      language: 'en-US',\n    },\n  };\n\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits?`, options);\n\n    return data.cast;\n  } catch (error) {\n    console.error('Something wrong with API', error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  const options = {\n    params: {\n      api_key: KEY_API,\n      language: 'en-US',\n      page: 1,\n    },\n  };\n\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews?`, options);\n\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong with API', error.message);\n  }\n};\n"],"names":["BackLink","styled","Link","p","theme","radii","normal","colors","accent","black","fontWeights","large","white","affect","to","children","size","toastParams","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Wrapper","muted","Poster","Info","InfoItem","Genre","fontSizes","s","Nav","NavLink","movie","location","src","poster_path","alt","title","Date","release_date","getFullYear","vote_average","toFixed","overview","genres","length","map","id","name","state","from","Suspense","fallback","width","color","useState","setMovie","error","setError","useParams","useLocation","backLinkHref","useEffect","toast","getMovieById","Number","then","catch","message","axios","KEY_API","getTrendingMovies","options","params","api_key","data","validData","results","console","log","getMovies","searchQuery","currentPage","query","page","getCasts","language","cast","getReviews"],"sourceRoot":""}